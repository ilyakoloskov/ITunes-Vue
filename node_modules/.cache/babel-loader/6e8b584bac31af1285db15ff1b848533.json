{"remainingRequest":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/babel-loader/lib/index.js!/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/eslint-loader/index.js??ref--14-0!/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js","dependencies":[{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js","mtime":1645025548390},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/babel.config.js","mtime":1643451196628},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1643451204690},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/babel-loader/lib/index.js","mtime":1643451203909},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/eslint-loader/index.js","mtime":1643451215156}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3RvcmUoewogIC8vINCe0JHQrNCV0JrQoiDQmtCe0J3QpNCY0JPQo9Cg0JDQptCY0JgKICAvLyDQk9C70L7QsdCw0LvRjNC90L7QtSDRhdGA0LDQvdC40LvQuNGJ0LUsINCy0YHQtSDQtNCw0L3QvdGL0LUg0L7QsdGP0YzQstC70LXQvdC90YvQtSDQstC90YPRgtGA0Lggc3RhdGUsINC00L7RgdGC0YPQv9C90Ysg0LLRgdC10Lwg0LrQvtC80L/QvtC90LXQvdGC0LDQvAogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRyYWNrU3JjOiAiIiwKICAgICAgdHJhY2tOYW1lOiAiIiwKICAgICAgYXVkaW86IG5ldyBBdWRpbygpLAogICAgICB0cmFja0luZGV4OiAwLAogICAgICBpc1BsYXlpbmc6IGZhbHNlLAogICAgICBpc1NlbGVjdGVkOiB7fSwKICAgICAgYXVkaW9Wb2x1bWU6IDgwLAogICAgICAvLyDQnNCw0YHRgdC40LIg0LDQu9GM0LHQvtC80L7QsgogICAgICBkYXRhQmFzZTogW3sKICAgICAgICBhcnRpc3ROYW1lOiAiJFVJQ0lERUJPWSQiLAogICAgICAgIGFsYnVtTmFtZTogIkRhcmsgU2lkZSBPZiBUaGUgQ2xvdWRzIiwKICAgICAgICBhbGJ1bUNvdmVyOiAiLi9hc3NldHMvY292ZXJzL2RhcmtTaWRlT2ZUaGVDbG91ZHMucG5nIiwKICAgICAgICBhdWRpbzogewogICAgICAgICAgIkFpdGUsIEJldCI6ICIuL2Fzc2V0cy9hdWRpby9BaXRlLCBiZXQubXAzIiwKICAgICAgICAgICJDSEVSSVNIIFRIRSBERUFEIjogIi4vYXNzZXRzL2F1ZGlvL0NIRVJJU0ggVEhFIERFQUQubXAzIgogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIGFydGlzdE5hbWU6ICJTbGF1Z2h0ZXIgVG8gUHJldmFpbCIsCiAgICAgICAgYWxidW1OYW1lOiAiS29zdG9sb20iLAogICAgICAgIGFsYnVtQ292ZXI6ICIuL2Fzc2V0cy9jb3ZlcnMva29zdG9sb20uanBnIiwKICAgICAgICBhdWRpbzogewogICAgICAgICAgQm9uZWJyZWFrZXI6ICIuL2Fzc2V0cy9hdWRpby9Cb25lYnJlYWtlci5tcDMiCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgYXJ0aXN0TmFtZTogIk1pY2sgR29yZG9uIiwKICAgICAgICBhbGJ1bU5hbWU6ICJEb29tIiwKICAgICAgICBhbGJ1bUNvdmVyOiAiLi9hc3NldHMvY292ZXJzL2Rvb20uanBnIiwKICAgICAgICBhdWRpbzogewogICAgICAgICAgIlZlZ2EgQ29yZSI6ICIuL2Fzc2V0cy9hdWRpby9WZWdhQ29yZS5tcDMiCiAgICAgICAgfQogICAgICB9XQogICAgfTsKICB9LAogIC8vINCe0LHRjNC10LrRgiwg0LTQu9GPINC+0LHRjNGP0LLQu9C10L3QuNC1INGE0YPQvdC60YbQuNC5INC40LfQvNC10L3Rj9GO0YnQuNC5IHN0YXRlCiAgLy8g0JTQu9GPINCy0YvQt9C+0LLQsCDQvdGD0LbQvdC+0Lkg0LzRg9GC0LDRhtC40Lgg0LIg0L3Rg9C20L3QvtC8INC60L7QvNC/0L7QvdC10L3RgtC1INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyBjb21taXQKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9QTEFZSU5HOiBmdW5jdGlvbiBTRVRfUExBWUlORyhzdGF0ZSkgewogICAgICBzdGF0ZS5pc1BsYXlpbmcgPSAhc3RhdGUuaXNQbGF5aW5nOwogICAgfSwKICAgIFNFVF9TRUxFQ1RFRDogZnVuY3Rpb24gU0VUX1NFTEVDVEVEKHN0YXRlLCBhbGJ1bSkgewogICAgICBzdGF0ZS5pc1NlbGVjdGVkID0gYWxidW07CiAgICAgIHZhciB0cmFja0luZGV4ID0gMDsKICAgICAgdmFyIHRyYWNrTmFtZSA9IE9iamVjdC5rZXlzKHN0YXRlLmlzU2VsZWN0ZWQuYXVkaW8pOwogICAgICB2YXIgdHJhY2tTcmMgPSBPYmplY3QudmFsdWVzKHN0YXRlLmlzU2VsZWN0ZWQuYXVkaW8pOwogICAgICBzdGF0ZS5hdWRpby5zcmMgPSB0cmFja1NyY1t0cmFja0luZGV4XTsKICAgICAgc3RhdGUudHJhY2tOYW1lID0gdHJhY2tOYW1lW3RyYWNrSW5kZXhdOwogICAgICBjb25zb2xlLmxvZyhzdGF0ZS5hdWRpby5zcmMpOwogICAgfSwKICAgIFBMQVlfVFJBQ0s6IGZ1bmN0aW9uIFBMQVlfVFJBQ0soc3RhdGUpIHsKICAgICAgc3RhdGUuaXNQbGF5aW5nID8gc3RhdGUuYXVkaW8ucGxheSgpIDogc3RhdGUuYXVkaW8ucGF1c2UoKTsKICAgICAgY29uc29sZS5sb2coInRyYWNrOiAiLmNvbmNhdChzdGF0ZS5hdWRpby5zcmMsICIgIikuY29uY2F0KHN0YXRlLmlzUGxheWluZykpOwogICAgfSwKICAgIE5FWFRfVFJBQ0s6IGZ1bmN0aW9uIE5FWFRfVFJBQ0soc3RhdGUpIHsKICAgICAgc3RhdGUudHJhY2tJbmRleCsrOwogICAgICB2YXIgdHJhY2tOYW1lID0gT2JqZWN0LmtleXMoc3RhdGUuaXNTZWxlY3RlZC5hdWRpbyk7CiAgICAgIHZhciB0cmFja1NyYyA9IE9iamVjdC52YWx1ZXMoc3RhdGUuaXNTZWxlY3RlZC5hdWRpbyk7CiAgICAgIHN0YXRlLmF1ZGlvLnNyYyA9IHRyYWNrU3JjW3N0YXRlLnRyYWNrSW5kZXhdOwogICAgICBzdGF0ZS50cmFja05hbWUgPSB0cmFja05hbWVbc3RhdGUudHJhY2tJbmRleF07CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlLmF1ZGlvLnNyYyk7CiAgICB9CiAgfSwKICAvLyDQk9C10YLRgtC10YAg0L3Rg9C20LXQvSDQtNC70Y8g0YLQvtCz0L4sINGH0YLQvtCx0Ysg0L3QtSDQvtCx0YDQsNGJ0LDRgtGM0YHRjyDQvdCw0L/RgNGP0LzRg9GOINC6IHN0YXRlLCDRgtC6INC10LPQviDQuNC30LzQtdC90LXQvdC40LUg0LzQvtC20LXRgiDQv9GA0LjQstC10YHRgtC4INC6INC90LXQutC60L7RgNC10LrRgtC90L7QuSDRgNCw0LHQvtGC0LUg0L/RgNC40LvQvtC20LXQvdC40Y8KICAvLyDQotGA0LDQvdGB0YTQvtGA0LzQuNGA0YPQtdC8INC00LDQvdC90YvQtSwg0L3QtSDRgtGA0LDQvdGB0YTQvtGA0LzQuNGA0YPRjyBzdGF0ZQogIGdldHRlcnM6IHsKICAgIElTX1RSQUNLX0lOREVYOiBmdW5jdGlvbiBJU19UUkFDS19JTkRFWChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudHJhY2tJbmRleDsKICAgIH0sCiAgICBJU19EQVRBX0JBU0U6IGZ1bmN0aW9uIElTX0RBVEFfQkFTRShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGF0YUJhc2U7CiAgICB9LAogICAgSVNfU0VMRUNURUQ6IGZ1bmN0aW9uIElTX1NFTEVDVEVEKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pc1NlbGVjdGVkOwogICAgfSwKICAgIElTX1BMQVlJTkc6IGZ1bmN0aW9uIElTX1BMQVlJTkcoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmlzUGxheWluZzsKICAgIH0sCiAgICBJU19BVURJTzogZnVuY3Rpb24gSVNfQVVESU8oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmF1ZGlvOwogICAgfSwKICAgIElTX1ZPTFVNRV9BVURJTzogZnVuY3Rpb24gSVNfVk9MVU1FX0FVRElPKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hdWRpby52b2x1bWUgKiAxMDA7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBTRVRfUExBWUlORzogZnVuY3Rpb24gU0VUX1BMQVlJTkcoY29udGV4dCwgcGxheWluZykgewogICAgICBjb250ZXh0LmNvbW1pdCgiU0VUX1BMQVlJTkciLCBwbGF5aW5nKTsKICAgIH0sCiAgICBTRVRfU0VMRUNURUQ6IGZ1bmN0aW9uIFNFVF9TRUxFQ1RFRChjb250ZXh0LCBhbGJ1bSkgewogICAgICBjb250ZXh0LmNvbW1pdCgiU0VUX1NFTEVDVEVEIiwgYWxidW0pOwogICAgfSwKICAgIFBMQVlfVFJBQ0s6IGZ1bmN0aW9uIFBMQVlfVFJBQ0soY29udGV4dCkgewogICAgICBjb250ZXh0LmNvbW1pdCgiUExBWV9UUkFDSyIpOwogICAgfSwKICAgIE5FWFRfVFJBQ0s6IGZ1bmN0aW9uIE5FWFRfVFJBQ0soY29udGV4dCkgewogICAgICBjb250ZXh0LmNvbW1pdCgiTkVYVF9UUkFDSyIpOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js"],"names":["createStore","state","trackSrc","trackName","audio","Audio","trackIndex","isPlaying","isSelected","audioVolume","dataBase","artistName","albumName","albumCover","Bonebreaker","mutations","SET_PLAYING","SET_SELECTED","album","Object","keys","values","src","console","log","PLAY_TRACK","play","pause","NEXT_TRACK","getters","IS_TRACK_INDEX","IS_DATA_BASE","IS_SELECTED","IS_PLAYING","IS_AUDIO","IS_VOLUME_AUDIO","volume","actions","context","playing","commit"],"mappings":"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","sourcesContent":["import { createStore } from \"vuex\";\n\nexport default createStore({\n  // ОБЬЕКТ КОНФИГУРАЦИИ\n\n  // Глобальное хранилище, все данные обяьвленные внутри state, доступны всем компонентам\n  state() {\n    return {\n      trackSrc: \"\",\n      trackName: \"\",\n      audio: new Audio(),\n      trackIndex: 0,\n      isPlaying: false,\n      isSelected: {},\n      audioVolume: 80,\n      // Массив альбомов\n      dataBase: [\n        {\n          artistName: \"$UICIDEBOY$\",\n          albumName: \"Dark Side Of The Clouds\",\n          albumCover: \"./assets/covers/darkSideOfTheClouds.png\",\n          audio: {\n            \"Aite, Bet\": \"./assets/audio/Aite, bet.mp3\",\n            \"CHERISH THE DEAD\": \"./assets/audio/CHERISH THE DEAD.mp3\",\n          },\n        },\n        {\n          artistName: \"Slaughter To Prevail\",\n          albumName: \"Kostolom\",\n          albumCover: \"./assets/covers/kostolom.jpg\",\n          audio: {\n            Bonebreaker: \"./assets/audio/Bonebreaker.mp3\",\n          },\n        },\n        {\n          artistName: \"Mick Gordon\",\n          albumName: \"Doom\",\n          albumCover: \"./assets/covers/doom.jpg\",\n          audio: {\n            \"Vega Core\": \"./assets/audio/VegaCore.mp3\",\n          },\n        },\n      ],\n    };\n  },\n  // Обьект, для обьявление функций изменяющий state\n  // Для вызова нужной мутации в нужном компоненте используется commit\n  mutations: {\n    SET_PLAYING(state) {\n      state.isPlaying = !state.isPlaying;\n    },\n    SET_SELECTED(state, album) {\n      state.isSelected = album;\n      let trackIndex = 0;\n      let trackName = Object.keys(state.isSelected.audio);\n      let trackSrc = Object.values(state.isSelected.audio);\n      state.audio.src = trackSrc[trackIndex];\n      state.trackName = trackName[trackIndex];\n      console.log(state.audio.src);\n    },\n    PLAY_TRACK(state) {\n      state.isPlaying ? state.audio.play() : state.audio.pause();\n      console.log(`track: ${state.audio.src} ${state.isPlaying}`);\n    },\n    NEXT_TRACK(state) {\n      state.trackIndex++;\n      let trackName = Object.keys(state.isSelected.audio);\n      let trackSrc = Object.values(state.isSelected.audio);\n      state.audio.src = trackSrc[state.trackIndex];\n      state.trackName = trackName[state.trackIndex];\n      console.log(state.audio.src);\n    },\n  },\n  // Геттер нужен для того, чтобы не обращаться напрямую к state, тк его изменение может привести к неккоректной работе приложения\n  // Трансформируем данные, не трансформируя state\n  getters: {\n    IS_TRACK_INDEX: (state) => {\n      return state.trackIndex;\n    },\n    IS_DATA_BASE: (state) => {\n      return state.dataBase;\n    },\n    IS_SELECTED: (state) => {\n      return state.isSelected;\n    },\n    IS_PLAYING: (state) => {\n      return state.isPlaying;\n    },\n    IS_AUDIO: (state) => {\n      return state.audio;\n    },\n    IS_VOLUME_AUDIO: (state) => {\n      return state.audio.volume * 100;\n    },\n  },\n  actions: {\n    SET_PLAYING(context, playing) {\n      context.commit(\"SET_PLAYING\", playing);\n    },\n    SET_SELECTED(context, album) {\n      context.commit(\"SET_SELECTED\", album);\n    },\n    PLAY_TRACK(context) {\n      context.commit(\"PLAY_TRACK\");\n    },\n    NEXT_TRACK(context) {\n      context.commit(\"NEXT_TRACK\");\n    },\n  },\n});\n"]}]}