{"remainingRequest":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ilya/Documents/Web/github/iTunes-Vue/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/src/App.vue","mtime":1647082578661},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1643451204690},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/babel-loader/lib/index.js","mtime":1643451203909},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643451229949},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1643451204690},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/vue-loader-v16/dist/index.js","mtime":1643451229930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGktdHVuZXMKICAgIDppc1NlbGVjdGVkPSJpc1NlbGVjdGVkIgogICAgOmlzUGxheWluZz0iaXNQbGF5aW5nIgogICAgOmFsYnVtcz0iYWxidW1zIgogICAgQHNlbGVjdGVkQWxidW09InNlbGVjdGVkIgogICAgQHBsYXlUcmFjaz0icGxheVRyYWNrIgogICAgQG5leHRUcmFjaz0ibmV4dFRyYWNrIgogIC8+Cg=="},{"version":3,"sources":["/Users/ilya/Documents/Web/github/iTunes-Vue/src/App.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC","file":"/Users/ilya/Documents/Web/github/iTunes-Vue/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <i-tunes\n    :isSelected=\"isSelected\"\n    :isPlaying=\"isPlaying\"\n    :albums=\"albums\"\n    @selectedAlbum=\"selected\"\n    @playTrack=\"playTrack\"\n    @nextTrack=\"nextTrack\"\n  />\n</template>\n\n<script>\nimport ITunes from \"./components/ITunes.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    \"i-tunes\": ITunes,\n  },\n  data() {\n    return {\n      audio: new Audio(),\n      trackIndex: 0,\n      isPlaying: false,\n      isSelected: {},\n      isAudioDuration: null,\n      isVolume: Number,\n      // Массив альбомов\n      albums: [\n        {\n          artistName: \"$UICIDEBOY$\",\n          albumName: \"Dark Side Of The Clouds\",\n          albumCover: \"./assets/covers/darkSideOfTheClouds.png\",\n          audio: {\n            \"Aite, Bet\": \"./assets/audio/Aite, bet.mp3\",\n            \"CHERISH THE DEAD\": \"./assets/audio/CHERISH THE DEAD.mp3\",\n          },\n          id: 1,\n        },\n        {\n          artistName: \"Slaughter To Prevail\",\n          albumName: \"Kostolom\",\n          albumCover: \"./assets/covers/kostolom.jpg\",\n          audio: {\n            Bonebreaker: \"./assets/audio/Bonebreaker.mp3\",\n          },\n          id: 2,\n        },\n        {\n          artistName: \"Mick Gordon\",\n          albumName: \"Doom\",\n          albumCover: \"./assets/covers/doom.jpg\",\n          audio: {\n            \"Vega Core\": \"./assets/audio/VegaCore.mp3\",\n          },\n          id: 3,\n        },\n      ],\n    };\n  },\n  methods: {\n    selected(album) {\n      this.trackIndex = 0;\n      this.isPlaying = false\n      this.isSelected = album;\n      let trackArray = Object.keys(this.isSelected.audio);\n      let trackName = trackArray[this.trackIndex];\n      this.isSelected.trackSelected = true\n      this.isSelected.trackName = trackName;\n      this.audio.src = this.isSelected.audio[trackName];\n      this.isVolume = this.audio.volume \n    },\n    playTrack() {\n      if (!this.isPlaying) {\n        this.isPlaying = true;\n        this.audio.play();\n      } else {\n        this.isPlaying = false;\n        this.audio.pause();\n      }\n    },\n    nextTrack() {\n      let trackArray = Object.keys(this.isSelected.audio);\n      let trackName = trackArray[this.trackIndex++];\n      this.isSelected.trackName = trackName;\n      this.audio.src = this.isSelected.audio[trackName];\n      console.log(this.isSelected.trackName);\n      this.audio.play()\n    },\n    prevTrack() {\n      let trackArray = Object.keys(this.isSelected.audio);\n      let trackName = trackArray[this.trackIndex--];\n      this.isSelected.trackName = trackName;\n      this.audio.src = this.isSelected.audio[trackName];\n    },\n  },\n};\n</script>\n"]}]}