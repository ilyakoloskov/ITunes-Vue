{"remainingRequest":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/babel-loader/lib/index.js!/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/eslint-loader/index.js??ref--14-0!/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js","dependencies":[{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js","mtime":1644963351668},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/babel.config.js","mtime":1643451196628},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1643451204690},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/babel-loader/lib/index.js","mtime":1643451203909},{"path":"/Users/ilya/Documents/Web/github/iTunes-Vue/node_modules/eslint-loader/index.js","mtime":1643451215156}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3RvcmUoewogIC8vINCe0JHQrNCV0JrQoiDQmtCe0J3QpNCY0JPQo9Cg0JDQptCY0JgKICAvLyDQk9C70L7QsdCw0LvRjNC90L7QtSDRhdGA0LDQvdC40LvQuNGJ0LUsINCy0YHQtSDQtNCw0L3QvdGL0LUg0L7QsdGP0YzQstC70LXQvdC90YvQtSDQstC90YPRgtGA0Lggc3RhdGUsINC00L7RgdGC0YPQv9C90Ysg0LLRgdC10Lwg0LrQvtC80L/QvtC90LXQvdGC0LDQvAogIHN0YXRlOiBmdW5jdGlvbiBzdGF0ZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGF1ZGlvOiBuZXcgQXVkaW8oIi4vYXNzZXRzL2F1ZGlvL0FpdGUsIGJldC5tcDMiKSwKICAgICAgdHJhY2tJbmRleDogMCwKICAgICAgaXNQbGF5aW5nOiBmYWxzZSwKICAgICAgaXNTZWxlY3RlZDoge30sCiAgICAgIGF1ZGlvVm9sdW1lOiA4MCwKICAgICAgLy8g0JzQsNGB0YHQuNCyINCw0LvRjNCx0L7QvNC+0LIKICAgICAgZGF0YUJhc2U6IFt7CiAgICAgICAgYXJ0aXN0TmFtZTogIiR1aWNpZGVib3kkIiwKICAgICAgICBhbGJ1bU5hbWU6ICJEYXJrIFNpZGUgT2YgVGhlIENsb3VkcyIsCiAgICAgICAgYWxidW1Db3ZlcjogIi4vYXNzZXRzL2NvdmVycy9kYXJrU2lkZU9mVGhlQ2xvdWRzLnBuZyIsCiAgICAgICAgYXVkaW86IHsKICAgICAgICAgICdBaXRlLCBCZXQnOiAnLi9hc3NldHMvYXVkaW8vQWl0ZSwgYmV0Lm1wMycsCiAgICAgICAgICAnQW50YXJjdGljYSc6ICcuL2Fzc2V0cy9hdWRpby9BbnRhcmN0aWNhLm1wMycKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBhcnRpc3ROYW1lOiAiU2xhdWdodGVyIFRvIFByZXZhaWwiLAogICAgICAgIGFsYnVtTmFtZTogIktvc3RvbG9tIiwKICAgICAgICBhbGJ1bUNvdmVyOiAiLi9hc3NldHMvY292ZXJzL2tvc3RvbG9tLmpwZyIsCiAgICAgICAgYXVkaW86IHsKICAgICAgICAgICJCb25lYnJlYWtlciI6ICIuL2Fzc2V0cy9hdWRpby9Cb25lYnJlYWtlci5tcDMiCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgYXJ0aXN0TmFtZTogIk1pY2sgR29yZG9uIiwKICAgICAgICBhbGJ1bU5hbWU6ICJEb29tIiwKICAgICAgICBhbGJ1bUNvdmVyOiAiLi9hc3NldHMvY292ZXJzL2Rvb20uanBnIiwKICAgICAgICBhdWRpbzogewogICAgICAgICAgIlZlZ2EgQ29yZSI6ICIuL2Fzc2V0cy9hdWRpby9WZWdhQ29yZS5tcDMiCiAgICAgICAgfQogICAgICB9XQogICAgfTsKICB9LAogIC8vINCe0LHRjNC10LrRgiwg0LTQu9GPINC+0LHRjNGP0LLQu9C10L3QuNC1INGE0YPQvdC60YbQuNC5INC40LfQvNC10L3Rj9GO0YnQuNC5IHN0YXRlCiAgLy8g0JTQu9GPINCy0YvQt9C+0LLQsCDQvdGD0LbQvdC+0Lkg0LzRg9GC0LDRhtC40Lgg0LIg0L3Rg9C20L3QvtC8INC60L7QvNC/0L7QvdC10L3RgtC1INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyBjb21taXQKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9JU19QTEFZSU5HOiBmdW5jdGlvbiBTRVRfSVNfUExBWUlORyhzdGF0ZSkgewogICAgICBzdGF0ZS5pc1BsYXlpbmcgPSAhc3RhdGUuaXNQbGF5aW5nOwogICAgfSwKICAgIFNFVF9JU19TRUxFQ1RFRDogZnVuY3Rpb24gU0VUX0lTX1NFTEVDVEVEKHN0YXRlLCBhbGJ1bSkgewogICAgICBzdGF0ZS5pc1NlbGVjdGVkID0gYWxidW07CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlLmlzU2VsZWN0ZWQpOyAvLyBnZXR0ZXJzLmlzU2VsZWN0ZWQgPSBhbGJ1bQogICAgICAvLyBnZXR0ZXJzLmlzU2VsZWN0ZWQuYXVkaW8uc3JjID0gc2VsZWN0ZWQuYXVkaW8KICAgICAgLy8gZ2V0dGVycy5pc1NlbGVjdGVkID0gc2VsZWN0ZWQuYXVkaW8KICAgIH0sCiAgICBQTEFZX1RSQUNLOiBmdW5jdGlvbiBQTEFZX1RSQUNLKHN0YXRlKSB7CiAgICAgIHN0YXRlLmlzUGxheWluZyA/IHN0YXRlLmlzQXVkaW8ucGxheSgpIDogc3RhdGUuaXNBdWRpby5wYXVzZSgpOwogICAgICBjb25zb2xlLmxvZygidHJhY2s6ICIuY29uY2F0KHN0YXRlLmlzQXVkaW8uc3JjLCAiICIpLmNvbmNhdChzdGF0ZS5pc1BsYXlpbmcpKTsKICAgIH0KICB9LAogIC8vINCT0LXRgtGC0LXRgCDQvdGD0LbQtdC9INC00LvRjyDRgtC+0LPQviwg0YfRgtC+0LHRiyDQvdC1INC+0LHRgNCw0YnQsNGC0YzRgdGPINC90LDQv9GA0Y/QvNGD0Y4g0Logc3RhdGUsINGC0Log0LXQs9C+INC40LfQvNC10L3QtdC90LjQtSDQvNC+0LbQtdGCINC/0YDQuNCy0LXRgdGC0Lgg0Log0L3QtdC60LrQvtGA0LXQutGC0L3QvtC5INGA0LDQsdC+0YLQtSDQv9GA0LjQu9C+0LbQtdC90LjRjwogIC8vINCi0YDQsNC90YHRhNC+0YDQvNC40YDRg9C10Lwg0LTQsNC90L3Ri9C1LCDQvdC1INGC0YDQsNC90YHRhNC+0YDQvNC40YDRg9GPIHN0YXRlCiAgZ2V0dGVyczogewogICAgSVNfVFJBQ0tfSU5ERVg6IGZ1bmN0aW9uIElTX1RSQUNLX0lOREVYKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50cmFja0luZGV4OwogICAgfSwKICAgIElTX0RBVEFfQkFTRTogZnVuY3Rpb24gSVNfREFUQV9CQVNFKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYXRhQmFzZTsKICAgIH0sCiAgICBJU19TRUxFQ1RFRDogZnVuY3Rpb24gSVNfU0VMRUNURUQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmlzU2VsZWN0ZWQ7CiAgICB9LAogICAgSVNfUExBWUlORzogZnVuY3Rpb24gSVNfUExBWUlORyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuaXNQbGF5aW5nOwogICAgfSwKICAgIElTX0FVRElPOiBmdW5jdGlvbiBJU19BVURJTyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuYXVkaW87CiAgICB9LAogICAgSVNfVk9MVU1FX0FVRElPOiBmdW5jdGlvbiBJU19WT0xVTUVfQVVESU8oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmF1ZGlvLnZvbHVtZSAqIDEwMDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIFNFVF9JU19QTEFZSU5HOiBmdW5jdGlvbiBTRVRfSVNfUExBWUlORyhjb250ZXh0KSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRfSVNfUExBWUlORycpOwogICAgfSwKICAgIFBMQVlfVFJBQ0s6IGZ1bmN0aW9uIFBMQVlfVFJBQ0soY29udGV4dCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnUExBWV9UUkFDSycpOwogICAgfSwKICAgIFNFVF9JU19TRUxFQ1RFRDogZnVuY3Rpb24gU0VUX0lTX1NFTEVDVEVEKGNvbnRleHQsIGFsYnVtKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRfSVNfU0VMRUNURUQnLCBhbGJ1bSk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/Users/ilya/Documents/Web/github/iTunes-Vue/src/store.js"],"names":["createStore","state","audio","Audio","trackIndex","isPlaying","isSelected","audioVolume","dataBase","artistName","albumName","albumCover","mutations","SET_IS_PLAYING","SET_IS_SELECTED","album","console","log","PLAY_TRACK","isAudio","play","pause","src","getters","IS_TRACK_INDEX","IS_DATA_BASE","IS_SELECTED","IS_PLAYING","IS_AUDIO","IS_VOLUME_AUDIO","volume","actions","context","commit"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n    // ОБЬЕКТ КОНФИГУРАЦИИ\n\n    // Глобальное хранилище, все данные обяьвленные внутри state, доступны всем компонентам\n    state(){\n      return {\n          audio: new Audio(\"./assets/audio/Aite, bet.mp3\"),\n          trackIndex: 0,\n          isPlaying: false,\n          isSelected: {},\n          audioVolume: 80,\n          // Массив альбомов\n          dataBase: [\n            {\n              artistName: \"$uicideboy$\",\n              albumName: \"Dark Side Of The Clouds\",\n              albumCover: \"./assets/covers/darkSideOfTheClouds.png\",\n              audio: \n                {\n                  'Aite, Bet': './assets/audio/Aite, bet.mp3',\n                  'Antarctica': './assets/audio/Antarctica.mp3'\n                },\n            },\n            {\n              artistName: \"Slaughter To Prevail\",\n              albumName: \"Kostolom\",\n              albumCover: \"./assets/covers/kostolom.jpg\",\n              audio: \n              {\n                \"Bonebreaker\": \"./assets/audio/Bonebreaker.mp3\"\n              },\n            },\n            {\n              artistName: \"Mick Gordon\",\n              albumName: \"Doom\",\n              albumCover: \"./assets/covers/doom.jpg\",\n              audio: \n                {\n                  \"Vega Core\": \"./assets/audio/VegaCore.mp3\"\n                },\n            },\n          ],\n        }; \n    },\n    // Обьект, для обьявление функций изменяющий state\n    // Для вызова нужной мутации в нужном компоненте используется commit\n    mutations: {\n      SET_IS_PLAYING(state){\n        state.isPlaying = !state.isPlaying\n      },\n      SET_IS_SELECTED(state, album){\n        state.isSelected = album\n        console.log(state.isSelected)\n\n        // getters.isSelected = album\n        // getters.isSelected.audio.src = selected.audio\n        // getters.isSelected = selected.audio\n      },\n      PLAY_TRACK(state){\n        state.isPlaying ? state.isAudio.play() : state.isAudio.pause()\n        console.log(`track: ${state.isAudio.src} ${state.isPlaying}`)\n      },\n    },\n    // Геттер нужен для того, чтобы не обращаться напрямую к state, тк его изменение может привести к неккоректной работе приложения\n    // Трансформируем данные, не трансформируя state\n    getters: {\n      IS_TRACK_INDEX: (state) => {\n        return state.trackIndex\n      },\n      IS_DATA_BASE: (state) => {\n        return state.dataBase\n      },\n      IS_SELECTED: (state) => {\n        return state.isSelected\n      },\n      IS_PLAYING: (state) => {\n        return state.isPlaying\n      },\n      IS_AUDIO: (state) => {\n        return state.audio\n      },\n      IS_VOLUME_AUDIO: (state) => {\n        return state.audio.volume * 100\n      }\n    },\n    actions:{\n      SET_IS_PLAYING(context){\n        context.commit('SET_IS_PLAYING')\n      },\n      PLAY_TRACK(context){\n        context.commit('PLAY_TRACK')\n      },\n      SET_IS_SELECTED(context, album){\n        context.commit('SET_IS_SELECTED', album)\n      }\n    }\n})"]}]}